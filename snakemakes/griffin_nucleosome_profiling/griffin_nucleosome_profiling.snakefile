#griffin_nucleosome_profiling.snakefile
#Anna-Lisa Doebley
#Template made 2021-12-12
#Ha Lab
#Fred Hutchinson Cancer Research Center

"""
#command to run snakemake (remove -np at end when done validating):
snakemake -s griffin_nucleosome_profiling.snakefile --cores 1 -np

#command to run snakemake on a slurm cluster (remove -np at end when done validating):
snakemake -s griffin_nucleosome_profiling.snakefile --latency-wait 60 --keep-going --cluster-config config/cluster_slurm.yaml --cluster "sbatch -p {cluster.partition} --mem={cluster.mem} -t {cluster.time} -c {cluster.ncpus} -n {cluster.ntasks} -o {cluster.output} -J {cluster.JobName}" -j 40 -np

"""

configfile: "config/samples.GC.yaml" #this is generated by griffin_GC_correction
configfile: "config/sites.yaml"
configfile: "config/config.yaml" 
configfile: "config/cluster_slurm.yaml" 

rule all:
	input: #commented out files are produced at the same time as other files
		expand("{results_dir}/{samples}/{samples}.GC_corrected.coverage.tsv",results_dir=config['results_dir'],samples=config['samples']),
		expand("{results_dir}/plots/{site_lists}.pdf", results_dir = config['results_dir'], site_lists = config['site_lists'])


rule calc_cov:
	input:
		bam = lambda wildcards: config["samples"][wildcards.samples]['bam'],
		GC_bias = lambda wildcards: config["samples"][wildcards.samples]['GC_bias'],
	output:
		uncorrected_bw = temp(config['tmp_dir']+"/{samples}/tmp_bigWig/{samples}.uncorrected.bw"),
		GC_corrected_bw = temp(config['tmp_dir']+"/{samples}/tmp_bigWig/{samples}.GC_corrected.bw"),
		tmp_pybedtools = temp(directory(config['tmp_dir']+"/{samples}/tmp_pybedtools"))
	params:
		sample_name = "{samples}",
		mappability_bias = 'none',
		mappability_correction = 'False',

		tmp_dir=config['tmp_dir'],

		reference_genome = config['reference_genome'],
		mappability_bw = config['mappability_bw'],
		chrom_sizes_path = config['chrom_sizes_path'],

		sites_yaml = config['sites_yaml'],
		griffin_scripts_dir = config['griffin_scripts_dir'],
		griffin_coverage_script = config['griffin_scripts_dir']+'/griffin_coverage.py',

		chrom_column=config['chrom_column'],
		position_column=config['position_column'],
		strand_column=config['strand_column'],
		chroms = config['chroms'],

		norm_window = config['norm_window'],
		size_range=config['size_range'],
		map_quality=config['map_quality'],

		number_of_sites=config['number_of_sites'],
		sort_by=config['sort_by'],
		ascending=config['ascending'],

		CPU = config['calc_cov']['ncpus']
		
	shell:
		"time {params.griffin_coverage_script} \
		--sample_name {params.sample_name} \
		--bam {input.bam} \
		--GC_bias {input.GC_bias} \
		--mappability_bias {params.mappability_bias} \
		--mappability_correction {params.mappability_correction} \
		--tmp_dir {params.tmp_dir} \
		--reference_genome {params.reference_genome} \
		--mappability_bw {params.mappability_bw} \
		--chrom_sizes_path {params.chrom_sizes_path} \
		--sites_yaml {params.sites_yaml} \
		--griffin_scripts {params.griffin_scripts_dir} \
		--chrom_column {params.chrom_column} \
		--position_column {params.position_column} \
		--strand_column {params.strand_column} \
		--chroms {params.chroms} \
		--norm_window {params.norm_window} \
		--size_range {params.size_range} \
		--map_quality {params.map_quality} \
		--number_of_sites {params.number_of_sites} \
		--sort_by {params.sort_by} \
		--ascending {params.ascending} \
		--CPU {params.CPU} "



rule merge_sites:
	input:
		uncorrected_bw = config['tmp_dir']+"/{samples}/tmp_bigWig/{samples}.uncorrected.bw",
		GC_corrected_bw = config['tmp_dir']+"/{samples}/tmp_bigWig/{samples}.GC_corrected.bw",
	output:
		uncorrected_cov = config['results_dir']+"/{samples}/{samples}.uncorrected.coverage.tsv",
		GC_corrected_cov = config['results_dir']+"/{samples}/{samples}.GC_corrected.coverage.tsv",
		tmp_pybedtools = temp(directory(config['tmp_dir']+"/{samples}/tmp_pybedtools2"))
	params:
		sample_name = "{samples}",

		tmp_dir=config['tmp_dir'],
		results_dir=config['results_dir'],
		mappability_correction = 'False',
		GC_map_corrected_bw = 'none',

		mappability_bw = config['mappability_bw'],
		chrom_sizes_path = config['chrom_sizes_path'],

		sites_yaml = config['sites_yaml'],
		griffin_scripts_dir = config['griffin_scripts_dir'],
		griffin_merge_sites_script = config['griffin_scripts_dir']+'/griffin_merge_sites.py',

		chrom_column=config['chrom_column'],
		position_column=config['position_column'],
		strand_column=config['strand_column'],
		chroms = config['chroms'],

		norm_window = config['norm_window'],
		save_window = config['save_window'],
		center_window = config['center_window'],
		fft_window = config['fft_window'],
		fft_index = config['fft_index'],
		smoothing_length = config['smoothing_length'],

		encode_exclude = config['encode_exclude'],
		centromeres = config['centromeres'],
		gaps = config['gaps'],
		patches = config['patches'],
		alternative_haplotypes = config['alternative_haplotypes'],

		step = config['step'],

		targeted_panel = config['targeted_panel'],
		CNA_normalization = config['CNA_normalization'],
		individual = config['individual'],
		smoothing = config['smoothing'],

		exclude_outliers = config['exclude_outliers'],
		exclude_zero_mappability = config['exclude_zero_mappability'],

		number_of_sites=config['number_of_sites'],
		sort_by=config['sort_by'],
		ascending=config['ascending'],

		CPU = config['merge_sites']['ncpus']

	shell:
		"time {params.griffin_merge_sites_script} \
		--sample_name {params.sample_name} \
		--uncorrected_bw_path {input.uncorrected_bw} \
		--GC_corrected_bw_path {input.GC_corrected_bw} \
		--GC_map_corrected_bw_path {params.GC_map_corrected_bw} \
		--mappability_correction {params.mappability_correction} \
		--tmp_dir {params.tmp_dir} \
		--results_dir {params.results_dir} \
		--mappability_bw {params.mappability_bw} \
		--chrom_sizes_path {params.chrom_sizes_path} \
		--sites_yaml {params.sites_yaml} \
		--griffin_scripts {params.griffin_scripts_dir} \
		--chrom_column {params.chrom_column} \
		--position_column {params.position_column} \
		--strand_column {params.strand_column} \
		--chroms {params.chroms} \
		--norm_window {params.norm_window} \
		--save_window {params.save_window} \
		--center_window {params.center_window} \
		--fft_window {params.fft_window} \
		--fft_index {params.fft_index} \
		--smoothing_length {params.smoothing_length} \
		--exclude_paths {params.encode_exclude} {params.centromeres} {params.gaps} {params.patches} {params.alternative_haplotypes} \
		--step {params.step} \
		--targeted_panel {params.targeted_panel} \
		--CNA_normalization {params.CNA_normalization} \
		--individual {params.individual} \
		--smoothing {params.smoothing} \
		--exclude_outliers {params.exclude_outliers} \
		--exclude_zero_mappability {params.exclude_zero_mappability} \
		--number_of_sites {params.number_of_sites} \
		--sort_by {params.sort_by} \
		--ascending {params.ascending} \
		--CPU {params.CPU} "

rule generate_plots:
	input:
		uncorrected_cov = expand("{results_dir}/{samples}/{samples}.uncorrected.coverage.tsv", results_dir = config['results_dir'], samples = config['samples']),
		GC_corrected_cov = expand("{results_dir}/{samples}/{samples}.GC_corrected.coverage.tsv", results_dir = config['results_dir'], samples = config['samples']),
	output:
		plots = expand("{results_dir}/plots/{site_lists}.pdf", results_dir = config['results_dir'], site_lists = config['site_lists'])
	params:
		in_dir = config['results_dir'],
		samples_yaml = config['samples_yaml'],
		mappability_correction = 'False',

		save_window=config['save_window'],
		step=config['step'],

		individual=config['individual'],
		results_dir=config['results_dir'],

		griffin_plot_script = config['griffin_scripts_dir']+'/griffin_plot.py',

		tmp_dir = config['tmp_dir'] #for removing empty directories

	shell:
		'time {params.griffin_plot_script} \
		--in_dir {params.in_dir} \
		--samples_yaml {params.samples_yaml} \
		--mappability_correction {params.mappability_correction} \
		--save_window {params.save_window} \
		--step {params.step} \
		--individual {params.individual} \
		--out_dir {params.results_dir}; \
		find {params.tmp_dir} -type d -empty -delete'
